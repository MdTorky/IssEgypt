.Library {
    margin-bottom: 20%;
    font-family: 'Poppins', sans-serif;
    margin-right: 130px;
}

.arabic .Library {
    font-family: 'Noto Kufi Arabic', sans-serif;
    margin-left: 130px;
    margin-right: 0px;

}

.LibraryContainer {
    /* background: blue; */
    padding: 10px;
    display: flex;
    /* flex-direction: row; */
    flex-direction: column;
    gap: 20px;
}

.SearchBar button {
    border: none;
    background: none;
    color: #8b8ba7;
}

/* styling of whole input container */
.SearchBar {
    --timing: 0.3s;
    --width-of-input: 300px;
    --height-of-input: 40px;
    --border-height: 2px;
    --input-bg: #fff;
    --border-color: var(--theme);
    --border-radius: 30px;
    --after-border-radius: 1px;
    position: relative;
    width: var(--width-of-input);
    height: var(--height-of-input);
    display: flex;
    align-items: center;
    padding-inline: 0.8em;
    border-radius: var(--border-radius);
    transition: border-radius 0.5s ease;
    background: var(--input-bg, #fff);
}

.SearchInput {
    font-size: 0.9rem;
    background-color: transparent;
    width: 100%;
    height: 100%;
    padding-inline: 0.5em;
    padding-block: 0.7em;
    border: none;
}

.SearchBar:before {
    content: "";
    position: absolute;
    background: var(--border-color);
    transform: scaleX(0);
    transform-origin: center;
    width: 100%;
    height: var(--border-height);
    left: 0;
    bottom: 0;
    border-radius: 1px;
    transition: transform var(--timing) ease;
}

.SearchBar:focus-within {
    border-radius: var(--after-border-radius);
}

.SearchBar input:focus {
    outline: none;
}

.SearchBar:focus-within:before {
    transform: scale(1);
}

.SearchReset {
    border: none;
    background: none;
    opacity: 0;
    visibility: hidden;
    cursor: pointer;
}

.SearchBar input:not(:placeholder-shown)~.SearchReset {
    opacity: 1;
    visibility: visible;
}

.SearchBar svg {
    width: 17px;
    margin-top: 3px;
}
















.NormalBooksContainer {
    background: var(--bg2);
    box-shadow: rgba(100, 100, 111, 0.2) 0px 7px 29px 0px;
    padding: 10px 15px;
    border-radius: 20px;

}


.NormalBooksContainer h2 {
    font-size: 1.6em;
    text-transform: uppercase;
}


.NormalBooks {
    display: flex;
    /* overflow-x: auto; */
    /* overflow-y: hidden; */
    /* white-space: nowrap; */
    flex-wrap: wrap;
    width: 100%;
    justify-content: space-around;
}


.BookCard {
    display: flex;
    flex-direction: column;
    align-items: center;
    border-radius: 10px;
    background-color: var(--bg2);
    /* padding: 30px 30px 0 30px; */
    width: 150px;
    padding: 0 5px;
    position: relative;
    transition: 0.5s ease all;
    box-shadow: rgba(100, 100, 111, 0.2) 0px 7px 29px 0px;
}

.BookCard:hover {
    transform: scale(1.1);
    cursor: pointer;
    /* box-shadow: rgba(0, 0, 0, 0.1) 0px 4px 12px; */
    box-shadow: rgba(0, 0, 0, 0.25) 0px 54px 55px, rgba(0, 0, 0, 0.12) 0px -12px 30px, rgba(0, 0, 0, 0.12) 0px 4px 6px, rgba(0, 0, 0, 0.17) 0px 12px 13px, rgba(0, 0, 0, 0.09) 0px -3px 5px;

}



.BookAvailability {
    position: absolute;
    color: var(--theme);
    right: 0;
}

.BookAvailability.Available {
    color: mediumspringgreen;
}

.BookImage {
    padding: 15px;
    background: var(--hover);
    border-radius: 10px 10px 0 0;
}


.BookCard:hover .BookStatus::after {
    position: absolute;
    color: var(--theme);
    content: attr(data-attr);
    top: 5px;
    font-weight: 800;
    background: rgba(6, 6, 6, 0.818);
    padding: 2px 5px;
    border-radius: 5px;

}

.BookCard:hover .BookStatus.Available::after {
    color: mediumaquamarine;
}


.BookCard img {
    width: 130px;
    margin: 0;
    border-radius: 10px 10px 0 0;
    box-shadow: rgba(255, 255, 255, 0.629) 0px 1px 4px, rgb(51, 51, 51) 0px 0px 0px 3px;
}

.BookCardText {
    width: 100%;
    border-radius: 0 0 10px 10px;
    align-items: center;
    display: flex;
    flex-direction: column;
    height: 100%;
    margin: 10px 0;
}


.BookCardText h3 {
    margin: 0;
    font-size: 0.8em;
    text-align: center;
    font-weight: 800;
    white-space: wrap;
}



.BookCard .BookingButton {
    width: 150px;
    height: 30px;
    cursor: pointer;
    display: flex;
    align-items: center;
    border: none;
    border-radius: 5px;
    font-size: 0.8em;
}

.BookCard .BookingButton, .BookCard .BookingButton span {
    transition: 200ms;
}

.BookCard .BookingButton .BookNow {
    transform: translateX(35px);
    color: var(--theme);
    font-weight: bold;
}

.BookCard .BookingButton .BookNowIcon {
    position: absolute;
    border-left: 1px solid var(--theme);
    transform: translateX(110px);
    height: 20px;
    width: 40px;
    display: flex;
    align-items: center;
    justify-content: center;
}

.BookCard .BookingButton svg {
    width: 30px;
    height: 20px;
    color: var(--theme);
}

.BookCard .BookingButton:hover svg {
    color: var(--bg);
}

.BookCard .BookingButton:hover {
    background: var(--theme);
}

.BookCard .BookingButton:hover .BookNow {
    color: transparent;
}

.BookCard .BookingButton:hover .BookNowIcon {
    width: 155px;
    border-left: none;
    transform: translateX(0);

}

.BookCard .BookingButton:focus {
    outline: none;
}

.BookCard .BookingButton:active .BookNowIcon svg {
    transform: scale(0.8);
}

.BookCardText .BookingButton {
    color: black;
    text-decoration: none;
    cursor: pointer;
    outline: none;
    border: none;
    background: transparent;
}




.BookFaculties {
    display: flex;
    margin: auto;
    width: 100%;
    justify-content: center;
    /* flex-wrap: wrap; */

}


.CustomCheckBoxHolder {
    display: flex;
    margin: 10px;
}

.CustomCheckBox {
    width: fit-content;
    position: relative;
    overflow: hidden;
    cursor: pointer;
    user-select: none;
    padding: 5px 8px;
    /* background-color: rgba(0, 0, 0, 0.458); */
    background-color: #da00377d;
    border-radius: 0px;
    color: rgba(255, 255, 255, 0.7);
    transition-timing-function: cubic-bezier(0.25, 0.8, 0.25, 1);
    transition-duration: 300ms;
    transition-property: color, background-color, box-shadow;
    display: flex;
    height: 32px;
    align-items: center;
    box-shadow: rgba(0, 0, 0, 0.15) 0px 2px 1px 0px inset, rgba(255, 255, 255, 0.17) 0px 1px 1px 0px;
    outline: none;
    justify-content: center;
    min-width: 55px;
}

.CustomCheckBox:hover {
    background-color: var(--theme);
    /* background-color: #2c2c2c; */
    color: white;
    box-shadow: rgba(0, 0, 0, 0.23) 0px -4px 1px 0px inset, rgba(255, 255, 255, 0.17) 0px -1px 1px 0px, rgba(0, 0, 0, 0.17) 0px 2px 4px 1px;
}

.CustomCheckBox .InnerText {
    text-align: center;
    font-size: 0.7em;
    font-weight: 900;
    pointer-events: none;
    transition-timing-function: cubic-bezier(0.25, 0.8, 0.25, 1);
    transition-duration: 300ms;
    transition-property: transform;
    transform: translateY(0px);
}

.CustomCheckBox:hover .InnerText {
    transform: translateY(-2px);
}

/* Multiple Checkboxes can be chained together for a radio input */
.CustomCheckBoxWrapper:first-of-type .CustomCheckBox {
    border-bottom-left-radius: 5px;
    border-top-left-radius: 5px;
    border-right: 0px;
}

.CustomCheckBoxWrapper:last-of-type .CustomCheckBox {
    border-bottom-right-radius: 5px;
    border-top-right-radius: 5px;
    border-left: 0px;
}

.CustomCheckBoxInput {
    display: none;
}

.CustomCheckBoxInput:checked+.CustomCheckBoxWrapper .CustomCheckBox {
    /* background-color: var(--hover); */
    background-color: var(--theme);

    color: white;
    box-shadow: rgba(0, 0, 0, 0.23) 0px -4px 1px 0px inset, rgba(255, 255, 255, 0.17) 0px -1px 1px 0px, rgba(0, 0, 0, 0.17) 0px 2px 4px 1px;
}

.CustomCheckBoxInput:checked+.CustomCheckBoxWrapper .CustomCheckBox .inner {
    transform: translateY(-2px);
}

.CustomCheckBoxInput:checked+.CustomCheckBoxWrapper .CustomCheckBox:hover {
    /* background-color: var(--hover2); */
    background-color: var(--theme2);

    box-shadow: rgba(0, 0, 0, 0.26) 0px -4px 1px 0px inset, rgba(255, 255, 255, 0.17) 0px -1px 1px 0px, rgba(0, 0, 0, 0.15) 0px 3px 6px 2px;
}

.CustomCheckBoxWrapper .CustomCheckBox:hover .InnerText {
    transform: translateY(-2px);
}











.RecommendedBooks {
    display: flex;
    gap: 10px;
    justify-content: center;
    animation: fadeInUp 2s ease 0s 1 normal forwards;
    flex-wrap: wrap;
}


.RecommendedBooks:hover .RecommendedBook {
    filter: blur(3px);
}

.RecommendedBooks:hover .RecommendedBook:hover {
    filter: blur(0);
}

.RecommendedBook {
    display: flex;
    flex-direction: column;
    justify-content: center;
    padding: 10px;
    margin: 0;
    align-items: center;
    gap: 10px;
    border-radius: 10px;
    transition: all 0.5s ease !important;
    /* background: var(--bg); */

}

.RecommendedBook:hover {
    transform: scale(1.2) !important;
    box-shadow: rgba(0, 0, 0, 0.16) 0px 10px 36px 0px, rgba(0, 0, 0, 0.06) 0px 0px 0px 1px;
}



.RecommendedBook img {
    width: 100px;
}

.RecommendedBook h6 {
    margin: 0;

}